#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

#
# Set default aimk switches
#
switch($buildarch)
   case "aix43":
   case "lx22-alpha":
   case "win32-x86":
      set argv = ( -no-jni -no-java $* )
      breaksw
   default:
      set argv = ( $* )
      breaksw
endsw

# JAVA settings
setenv ARCH $buildarch
setenv EN_QUIET 1

switch($buildarch)
   # don't support jdk1.5
   case "irix65":
   case "hp11":
   case "hp11-64":
   case "linux-ia64":
   case "aix":
      if ( -f /vol2/resources/en_jdk14 ) then
         source /vol2/resources/en_jdk14 
      endif   
      breaksw
   default:
      if ( -f /vol2/resources/en_jdk15 ) then
         source /vol2/resources/en_jdk15 
      endif 
      breaksw
endsw

#
# TMPDIR the directory where gcc puts intermediate files. Points to a
# local directory for faster compilation
#
setenv TMPDIR /tmp

# 
# OPENSSL_HOME the directory where the include and lib directory of openssl
# is installed
#
set OPENSSL_SOVERSION = 0.9.8h
set OPENSSL_HOME = /build/openssl-install

# 
# BERKELEYDB_HOME the directory where the include and lib directory of
# Berkeley DB is installed
#
set BERKELEYDB_HOME = /build/berkeleydb
set BDB_INCLUDE_SUBDIR =
set BDB_LIB_SUBDIR =
set BDB_LIB_SUFFIX =

# Directory where libcore.so's reside
# Relevant for Linux only:
# http://gridengine.sunsource.net/issues/show_bug.cgi?id=2552
set CORE_HOME = /vol2/tools/SW/libcore/$buildarch

set HWLOC_VERSION = 1.2.2
set HWLOC_DIRECTORY = hwloc-${HWLOC_VERSION}

# 
# KRB_HOME the directory where the include and lib directory of kerberos is
# installed
#
set KRB_HOME = /vol2/tools/SW/krb5/$buildarch

# 
# man2html path
#
set MAN2HTMLPATH = /vol2/tools/SW/$buildarch/bin
# 
# groff path
#
set GROFFPATH = /vol2/tools/SW/$buildarch/bin

#
# SWIG path 
#
set SWIG = /vol2/tools/SW/swig-1.3.22/$buildarch/bin/swig

#
# PERL path
#
set PERL = /vol2/tools/SW/$buildarch/bin/perl

#
# TCLSH path
#
set TCLSH = /vol2/tools/SW/$buildarch/bin/tclsh8.3

#
# Location of a copyright.h file which containes a copyright string
# which should be included in each binary part of Grid Engine
#
set COPYRIGHT_DIR = /off_home/codine/ge62u4-copyright


#
# Location of a copyright.h file which containes a copyright string
# which is included in each binary part of Sun Grid Engine (the version
# which Sun Microsystems is releasing
#
set SUN_COPYRIGHT_DIR  = /off_home/codine/sge62u5-copyright

# for some platforms we cannot use dynamic loading of the spooling libraries.
# fallback to berkeleydb spooling
switch ($BUILDARCH)
   case "HP11":
      # for HP11.00 we don't have dynamic loading of shared libraries
      # build with berkeleydb
   case "AIX43":
   case "AIX":
   case "IRIX65":
      # for these platforms, reverse resolving of global symbols doesn't
      # work as expected: Instead of reverse resolving global symbols
      # (variables as well as functions), the code of dynamic libraries uses
      # duplicates of the global symbols.
      set argv = ( -spool-berkeleydb $argv )
   breaksw
endsw

if ( ! $?JAVA_HOME ) then

   set JAVAC_BIN = `which \javac`
   set JAVA_HOME_LOCATION = ""

   set JAVAC_LOCATION = $JAVAC_BIN
   while ( { test -L "$JAVAC_LOCATION" }  )
       set JAVAC_LOCATION = `readlink $JAVAC_LOCATION`
       if ( $status != 0 ) then
          break
       endif
   end

   if ( -e "$JAVAC_LOCATION" ) then
      set JAVAC_BIN = $JAVAC_LOCATION
   endif

   if ( -e "$JAVAC_BIN" ) then
      set JAVAV = `$JAVAC_BIN -version >& /dev/null`
      if ( $status == 0 ) then
         set JAVAV = `$JAVAC_BIN -version |& head -1`
         set JAVAV = `expr "$JAVAV" : 'javac 1\.\([0-9]\).*'`

         if ( $JAVAV >= 4 ) then
            set JAVA_HOME_LOCATION = `expr //$JAVAC_BIN : '//\(.*\)/bin/.*'`

            if ( ! -d  "$JAVA_HOME_LOCATION" ) then
               set JAVA_HOME_LOCATION = `expr //$JAVAC_BIN : '//\(.*\)/Commands/.*'`
            endif
         endif
      else
         set JAVA_HOME_LOCATION = `expr //$JAVAC_BIN : '//\(.*\)/bin/.*'`

         if ( ! -d  "$JAVA_HOME_LOCATION" ) then
            set JAVA_HOME_LOCATION = `expr //$JAVAC_BIN : '//\(.*\)/Commands/.*'`
         endif
      endif

      if ( -d "$JAVA_HOME_LOCATION" ) then
         setenv JAVA_HOME            $JAVA_HOME_LOCATION
         setenv JAVA_HOME_SET_BY_SGE TRUE
      else
         set JAVAC_LOCATION = `which \javac`

         while ( { test -L "$JAVAC_LOCATION" }  )
             set JAVAC_LOCATION = `readlink $JAVAC_LOCATION`
             if ( $status != 0 ) then
                break
             endif

             set CHECK_PATH = `expr //$JAVAC_LOCATION : '//\(.*\)/bin/.*'`

             if ( -e "$CHECK_PATH/include/jni.h" ) then
                setenv JAVA_HOME            $CHECK_PATH
                setenv JAVA_HOME_SET_BY_SGE TRUE
                break
             endif
         end
      endif
   endif
endif


# set junit jar file
# set JUNIT_JAR = '/vol2/tools/SW/java/junit3.8.1/junit.jar'
set JUNIT_JAR = '/usr/share/java/junit.jar'

# set some variables which are necessary to compile GE for win32 architecture
#
# WIN32_VS_BASE:  Base directory of Visual Studio installation
# WIN32_VS_SDK:   SDK subdirectory within WIN32_VS_BASE
# WIN32_VS_CORE:  Compiler subdirectory within WIN32_VS_BASE
switch($buildarch)
   case "win32-x86":
#     default path for a default installation
#      set WIN32_VS_BASE = "C:\Programme\Microsoft Visual Studio .NET 2003"
#     path on host bofur
      set WIN32_VS_BASE = "C:\VisualStudio"
      set WIN32_VS_I1 = "${WIN32_VS_BASE}\Vc7\include"
      set WIN32_VS_I2 = "${WIN32_VS_BASE}\Vc7\PlatformSDK\Include"
      set WIN32_VS_I3 = "${WIN32_VS_BASE}\Vc7\atlmfc\include"
      set WIN32_VS_L1 = "${WIN32_VS_BASE}\Vc7\Lib"
      set WIN32_VS_L2 = "${WIN32_VS_BASE}\Vc7\PlatformSDK\Lib"
      set WIN32_VS_L3 = "${WIN32_VS_BASE}\Vc7\atlmfc\lib"
      set WINTEMPDIR  = "C:\\TEMP"
      breaksw
endsw

